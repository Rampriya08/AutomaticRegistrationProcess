<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="857,5030" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:si="clr-namespace:System.IO;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:uas="clr-namespace:UiPath.Activities.System;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uoa="clr-namespace:UiPath.OmniPage.Activities;assembly=UiPath.OmniPage.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="110">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities.Business.ForEachMail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Activities.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Activities.System</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.Core.Activities.OCR.Engines</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.Digitizer.Utils</x:String>
      <x:String>UiPath.Vision.Core.OCR</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="43">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Activities.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.Digitizer</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap:VirtualizedContainerService.HintSize="709,4965" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="snm:MailMessage" Name="mail" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="mailmsg" />
      <Variable x:TypeArguments="ui:PasswordCredentials" Name="gmailcredential" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="email" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="phone" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="course" />
      <Variable x:TypeArguments="si:FileInfo" Name="CurrentFile" />
      <Variable x:TypeArguments="x:String" Name="file" />
      <Variable x:TypeArguments="s:String[]" Name="pdffiles" />
      <Variable x:TypeArguments="x:String" Name="name" />
      <Variable x:TypeArguments="x:String" Name="dob" />
      <Variable x:TypeArguments="x:String" Name="gender" />
      <Variable x:TypeArguments="x:String" Name="nationality" />
      <Variable x:TypeArguments="x:String" Name="scholarship" />
      <Variable x:TypeArguments="x:String" Name="fname" />
      <Variable x:TypeArguments="x:String" Name="mname" />
      <Variable x:TypeArguments="x:String" Name="hptmark" />
      <Variable x:TypeArguments="x:String" Name="hlevel" />
      <Variable x:TypeArguments="x:String" Name="hpomark" />
      <Variable x:TypeArguments="x:String" Name="scanpdf" />
      <Variable x:TypeArguments="x:String" Name="subjectname1" />
      <Variable x:TypeArguments="x:String" Name="subjectname2" />
      <Variable x:TypeArguments="x:String" Name="subjectname3" />
      <Variable x:TypeArguments="x:String" Name="subjectname4" />
      <Variable x:TypeArguments="x:String" Name="subjectname5" />
      <Variable x:TypeArguments="x:String" Name="subjectname6" />
      <Variable x:TypeArguments="x:String" Name="subjectmark1" />
      <Variable x:TypeArguments="x:String" Name="subjectmark2" />
      <Variable x:TypeArguments="x:String" Name="subjectmark3" />
      <Variable x:TypeArguments="x:String" Name="subjectmark4" />
      <Variable x:TypeArguments="x:String" Name="subjectmark5" />
      <Variable x:TypeArguments="x:String" Name="subjectmark6" />
      <Variable x:TypeArguments="x:String" Name="tmark" />
      <Variable x:TypeArguments="x:String" Name="tlevel" />
      <Variable x:TypeArguments="x:String" Name="comvalue" />
      <Variable x:TypeArguments="x:String" Name="address" />
      <Variable x:TypeArguments="x:String" Name="aadhaarno" />
      <Variable x:TypeArguments="x:String" Name="emis" />
      <Variable x:TypeArguments="x:String" Name="doorno" />
      <Variable x:TypeArguments="x:String" Name="strret" />
      <Variable x:TypeArguments="x:String" Name="district" />
      <Variable x:TypeArguments="x:String" Name="taluk" />
      <Variable x:TypeArguments="x:String" Name="state" />
      <Variable x:TypeArguments="x:String" Name="pincode" />
      <Variable x:TypeArguments="x:String" Name="hschoolname" />
      <Variable x:TypeArguments="x:String" Name="sdetails" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="647,52" sap2010:WorkflowViewState.IdRef="CommentOut_3">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,282" sap2010:WorkflowViewState.IdRef="Sequence_25">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <uas:GetUsernamePasswordX OrchestratorCredentialName="{x:Null}" TimeoutInSeconds="{x:Null}" AutosubmitTimeoutSeconds="10" Credential="[gmailcredential]" CredentialName="UiPath: gmailcredential" CredentialsSource="CredentialsManager" DisplayName="Get Username/Password" sap:VirtualizedContainerService.HintSize="338,171" sap2010:WorkflowViewState.IdRef="GetUsernamePasswordX_1" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" FilterExpression="{x:Null}" SecurePassword="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages" Email="townies007@gmail.com" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="647,25" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_2" IgnoreCRL="False" MailFolder="Inbox" MarkAsRead="False" Messages="[mailmsg]" OnlyUnreadMessages="True" OrderByDate="NewestFirst" Password="muoqvortynnmowgh" Port="993" SecureConnection="Auto" Server="imap.gmail.com" Top="30" />
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="647,85" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[mailmsg.Count.ToString]" />
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="647,4572" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[mailmsg]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="611,4446" sap2010:WorkflowViewState.IdRef="Sequence_4">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="hostel" />
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="department" />
              <Variable x:TypeArguments="x:String" Name="message" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Matches BuilderPattern="(?&lt;=Course type:).*" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Matches_4" Input="[mail.Body.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=Course type:).*&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=Course type:).*" RegexOption="IgnoreCase, Compiled" Result="[course]" />
            <ui:Matches BuilderPattern="(?&lt;=Phone:).\d+" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Matches_5" Input="[mail.Body.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=Phone:).\\d+&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=Phone:).\d+" RegexOption="IgnoreCase, Compiled" Result="[phone]" />
            <ui:Matches BuilderPattern="(?&lt;=Email:).*" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Matches_6" Input="[mail.Body.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=Email:).*&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=Email:).*" RegexOption="IgnoreCase, Compiled" Result="[email]" />
            <ui:Matches BuilderPattern="(?&lt;=need hostel:).*" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Matches_7" Input="[mail.Body.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=need hostel:).*&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=need hostel:).*" RegexOption="IgnoreCase, Compiled" Result="[hostel]" />
            <ui:Matches BuilderPattern="(?&lt;=department:).*" sap:VirtualizedContainerService.HintSize="549,60" sap2010:WorkflowViewState.IdRef="Matches_8" Input="[mail.Body.ToString]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=department:).*&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=department:).*" RegexOption="IgnoreCase, Compiled" Result="[department]" />
            <ui:SaveMailAttachments Attachments="{x:Null}" DisplayName="Save Attachments" ExcludeInlineAttachments="False" FolderPath="gmailf" sap:VirtualizedContainerService.HintSize="549,90" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_2" Message="[mail]" OverwriteExisting="False" />
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="549,85" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[email(0).Value +&quot; &quot; +phone(0).Value +&quot; &quot;+course(0).Value+hostel(0).Value+department(0).Value]" />
            <Assign sap:VirtualizedContainerService.HintSize="549,81" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="s:String[]">[pdffiles]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("gmailf","*.pdf")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="549,2308" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[pdffiles]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="file" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="513,2183" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ReadPDFWithOCR DegreeOfParallelism="-1" DisplayName="Read PDF With OCR" FileName="[file.toString]" sap:VirtualizedContainerService.HintSize="451,135" sap2010:WorkflowViewState.IdRef="ReadPDFWithOCR_2" ImageDpi="150" Range="All" Text="[scanpdf]">
                      <ui:ReadPDFWithOCR.OCREngine>
                        <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                          <ActivityFunc.Argument>
                            <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                          </ActivityFunc.Argument>
                          <uoa:OmniPageOCR Output="{x:Null}" PredictionId="{x:Null}" Scale="{x:Null}" Text="{x:Null}" BundleType="Extended" ComputeSkewAngle="False" DisplayName="OmniPage OCR" ExtractHandprintedText="False" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="OmniPageOCR_3" Image="[Image]" Language="eng" Profile="None" />
                        </ActivityFunc>
                      </ui:ReadPDFWithOCR.OCREngine>
                    </ui:ReadPDFWithOCR>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="451,62" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[scanpdf]" />
                    <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="451,1795" sap2010:WorkflowViewState.IdRef="IfElseIf_5">
                      <ui:IfElseIf.ConditionBlocks>
                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                          <ui:IfElseIfBlock BlockType="If" Condition="[scanpdf.toString.Contains(&quot;TRANSFER CERTIFICATE&quot;)]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,224" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="tcdata.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="tcdata.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="tc">
                                      <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="scanpdf" />
                                    </InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="sname">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="name" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="sgender">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="gender" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="smothername">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="mname" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="sfathername">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="fname" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="sdob">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="dob" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="snationality">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="nationality" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="semis">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="emis" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="sscholarship">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="scholarship" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="hschoolname">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="hschoolname" />
                                    </OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="sdetails">
                                      <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="sdetails" />
                                    </OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[scanpdf.toString.contains(&quot;AADHAAR&quot;)]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,224" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="aadhar.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="aadhar.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="aadhar">[scanpdf]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="aadhaarvalue">[aadhaarno]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="doorno">[doorno]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="street">[strret]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="district">[district]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="taluk">[taluk]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="state">[state]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="pincode">[pincode]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[scanpdf.ToString.contains(&quot;DEPARTMENT OF GOVERNMENT EXAMINATION&quot;) AND scanpdf.tostring.contains(&quot;HIGHER SECONDARY&quot;)]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,224" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="hmarksheet.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="hmarksheet.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="marksheet">[scanpdf]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="hlevel">[hlevel]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="hpomark">[hpomark]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="hptmark">[hptmark]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectname1">[subjectname1]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectname2">[subjectname2]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectname3">[subjectname3]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectname4">[subjectname4]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectname5">[subjectname5]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectname6">[subjectname6]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectmark1">[subjectmark1]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectmark2">[subjectmark2]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectmark3">[subjectmark3]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectmark4">[subjectmark4]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectmark5">[subjectmark5]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="subjectmark6">[subjectmark6]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[scanpdf.ToString.contains(&quot;COMMUNITY CERTIFICATE&quot;)]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,224" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="community.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="community.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="community">[scanpdf]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="comvalue">[comvalue]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[scanpdf.ToString.contains(&quot;DEPARTMENT OF GOVERNMENT EXAMINATION&quot;) AND scanpdf.tostring.contains(&quot;SECONDARY SCHOOL LEAVING CERTIFICATE&quot;)]">
                            <ui:IfElseIfBlock.Then>
                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,224" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="tmarksheet.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="tmarksheet.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="markseet">[scanpdf]</InArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="tenthmark">[tmark]</OutArgument>
                                    <OutArgument x:TypeArguments="x:String" x:Key="tlevel">[tlevel]</OutArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                              </Sequence>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                        </sc:BindingList>
                      </ui:IfElseIf.ConditionBlocks>
                    </ui:IfElseIf>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="549,85" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[tmark+&quot;   &quot;+tlevel+&quot;   &quot;+hlevel+&quot;   &quot;+hpomark+&quot;   &quot;+hptmark+&quot;   &quot;+subjectname1+&quot;   &quot;+subjectmark1+&quot;   &quot;+subjectname2+&quot;   &quot;+subjectmark2+&quot;   &quot;+subjectname3+&quot;   &quot;+subjectmark3+&quot;   &quot;+subjectname4+&quot;   &quot;+subjectmark4+&quot;   &quot;+subjectname5+&quot;   &quot;+subjectmark5+&quot;  &quot;+subjectname6+&quot;   &quot;+subjectmark6+&quot;   &quot;+name+&quot;   &quot;+dob+&quot;   &quot;+gender+&quot;   &quot;+nationality+&quot;   &quot;+scholarship+&quot;   &quot;+emis+&quot;   &quot;+fname+&quot;   &quot;+mname+&quot;   &quot;+&quot;address&quot; +&quot;   &quot;+doorno+strret+district+taluk+state+pincode+aadhaarno+&quot;   &quot;+comvalue+&quot;   &quot;+email(0).Value+&quot;   &quot;+course(0).Value+&quot;   &quot;+phone(0).Value+&quot; &quot;+hschoolname]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="form.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="549,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="form.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="sname">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="name.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="gender">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="gender.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="dob">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="dob.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="fname">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="fname.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="mname">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="mname.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="nationality">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="nationality.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="scholarship">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="scholarship.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="hschoolname">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hschoolname.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="emis">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="emis.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="tmark">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="tmark.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="tlevel">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="tlevel.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="hpomark">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hpomark.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="hptmark">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hptmark.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectname1">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectname1.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectname2">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectname2.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectname3">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectname3.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectname4">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectname4.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectname5">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectname5.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectname6">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectname6.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectmark1">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectmark1.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectmark2">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectmark2.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectmark3">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectmark3.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectmark4">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectmark4.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectmark5">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectmark5.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="subjectmark6">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="subjectmark6.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="hlevel">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hlevel.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="aadhaarno">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="aadhaarno.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="doorno">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="doorno.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="street">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="strret.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="district">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="district.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="taluk">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="taluk.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="state">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="state.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="community">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="comvalue.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="pincode">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="pincode.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="course">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="course(0).Value.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="hostel">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="hostel(0).Value.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="phone">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="phone(0).Value.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="email">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="email(0).VAlue.Trim" />
                </InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="department">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="department(0).Value.Trim" />
                </InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="message">
                  <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="message" />
                </OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="sdetail">
                  <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="sdetails" />
                </InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="549,85" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[message]" />
            <ui:SendMail Bcc="{x:Null}" Cc="{x:Null}" From="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" Subject="{x:Null}" TimeoutMS="{x:Null}" UseOAuth="{x:Null}" Body="[message]" DisplayName="Send SMTP Mail Message" Email="townies007@gmail.com" EnableSSL="True" sap:VirtualizedContainerService.HintSize="549,149" sap2010:WorkflowViewState.IdRef="SendMail_1" IgnoreCRL="False" IsBodyHtml="False" Password="muoqvortynnmowgh" Port="465" SecureConnection="Auto" Server="smtp.gmail.com" To="[email(0).Value.trim]">
              <ui:SendMail.Files>
                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
              </ui:SendMail.Files>
            </ui:SendMail>
            <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="C:\Users\DELL\Documents\UiPath\emailproject\gmailf" sap:VirtualizedContainerService.HintSize="549,519" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
              <ui:ForEachFileX.Body>
                <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                  <ActivityAction.Argument1>
                    <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                  </ActivityAction.Argument1>
                  <ActivityAction.Argument2>
                    <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                  </ActivityAction.Argument2>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="400,269" sap2010:WorkflowViewState.IdRef="Sequence_42">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MoveFile ContinueOnError="{x:Null}" DestinationResource="{x:Null}" PathResource="{x:Null}" Destination="completed" DisplayName="Move File" sap:VirtualizedContainerService.HintSize="338,158" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="True" Path="[CurrentFile.ToString]" />
                  </Sequence>
                </ActivityAction>
              </ui:ForEachFileX.Body>
            </ui:ForEachFileX>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>